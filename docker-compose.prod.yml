version: '3.8'

# 本番環境用のDocker Compose設定
# Azure Web Appにデプロイする場合の構成

services:
  # APIサーバー（リアルタイムAPI含む）
  api:
    image: ${ACR_NAME}.azurecr.io/salesdaily-api:latest
    container_name: salesdaily-api
    environment:
      - NODE_ENV=production
      - PORT=3002
      # Azure管理の環境変数を使用
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      # Azure OpenAI
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      # Azure SignalR
      - AZURE_SIGNALR_CONNECTION_STRING=${AZURE_SIGNALR_CONNECTION_STRING}
      # CRM連携（オプション）
      - DYNAMICS_CLIENT_ID=${DYNAMICS_CLIENT_ID}
      - DYNAMICS_CLIENT_SECRET=${DYNAMICS_CLIENT_SECRET}
      - DYNAMICS_TENANT_ID=${DYNAMICS_TENANT_ID}
      - DYNAMICS_URL=${DYNAMICS_URL}
      - SALESFORCE_CLIENT_ID=${SALESFORCE_CLIENT_ID}
      - SALESFORCE_CLIENT_SECRET=${SALESFORCE_CLIENT_SECRET}
      - SALESFORCE_USERNAME=${SALESFORCE_USERNAME}
      - SALESFORCE_PASSWORD=${SALESFORCE_PASSWORD}
      - SALESFORCE_SECURITY_TOKEN=${SALESFORCE_SECURITY_TOKEN}
    ports:
      - "80:3002"
    restart: always
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3002/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  # フロントエンド（Azure App Serviceにデプロイ）
  frontend:
    image: ${ACR_NAME}.azurecr.io/salesdaily-frontend:latest
    container_name: salesdaily-frontend
    environment:
      - NODE_ENV=production
      - VITE_API_URL=https://${WEB_APP_NAME}.azurewebsites.net/api
      - VITE_WS_URL=wss://${WEB_APP_NAME}.azurewebsites.net/api/realtime/ws
    ports:
      - "3000:80"
    depends_on:
      - api
    restart: always